{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_MISSIONS_PENDING, FETCH_MISSIONS_SUCCESS, FETCH_MISSIONS_ERROR, SET_MISSIONS_ROCKET_FILTER, SET_MISSIONS_SEARCH_FILTER } from '../types';\nexport const fetchAllMissions = () => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_MISSIONS_PENDING\n    });\n    const response = await axios.get('https://api.spacexdata.com/v3/launches');\n    const missions = [];\n\n    for (let i = 0; i < response.data.length; i++) {\n      missions.push({\n        rocket: response.data[i].rocket.rocket_name,\n        rocketId: response.data[i].rocket.rocket_id,\n        type: response.data[i].rocket.rocket_type,\n        location: response.data[i].launch_site.site_name,\n        details: response.data[i].details,\n        date: response.data[i].launch_date_utc,\n        link: response.data[i].links.article_link\n      });\n    }\n\n    console.log('Formatted mission data', missions);\n    dispatch({\n      type: FETCH_MISSIONS_SUCCESS,\n      payload: missions\n    });\n  } catch (e) {\n    dispatch({\n      type: FETCH_MISSIONS_ERROR\n    });\n  }\n};\nexport const filterMissionsByRocket = rocketId => async dispatch => {\n  dispatch({\n    type: SET_MISSIONS_ROCKET_FILTER,\n    payload: rocketId\n  });\n};\nexport const filterMissionsBySearch = searchValue => async dispatch => {\n  dispatch({\n    type: SET_MISSIONS_SEARCH_FILTER,\n    payload: searchValue\n  });\n};","map":{"version":3,"sources":["/Users/windsorhuang/Desktop/soma-frontend-code-test-master/src/redux/actions/missionsActions.js"],"names":["axios","FETCH_MISSIONS_PENDING","FETCH_MISSIONS_SUCCESS","FETCH_MISSIONS_ERROR","SET_MISSIONS_ROCKET_FILTER","SET_MISSIONS_SEARCH_FILTER","fetchAllMissions","dispatch","type","response","get","missions","i","data","length","push","rocket","rocket_name","rocketId","rocket_id","rocket_type","location","launch_site","site_name","details","date","launch_date_utc","link","links","article_link","console","log","payload","e","filterMissionsByRocket","filterMissionsBySearch","searchValue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,EAIEC,0BAJF,EAKEC,0BALF,QAMO,UANP;AAQA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,UAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,wCAAV,CAAvB;AAEA,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,IAAT,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7CD,MAAAA,QAAQ,CAACI,IAAT,CAAc;AACZC,QAAAA,MAAM,EAAEP,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBI,MAAjB,CAAwBC,WADpB;AAEZC,QAAAA,QAAQ,EAAET,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBI,MAAjB,CAAwBG,SAFtB;AAGZX,QAAAA,IAAI,EAAEC,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBI,MAAjB,CAAwBI,WAHlB;AAIZC,QAAAA,QAAQ,EAAEZ,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBU,WAAjB,CAA6BC,SAJ3B;AAKZC,QAAAA,OAAO,EAAEf,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBY,OALd;AAMZC,QAAAA,IAAI,EAAEhB,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBc,eANX;AAOZC,QAAAA,IAAI,EAAElB,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBgB,KAAjB,CAAuBC;AAPjB,OAAd;AASD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCpB,QAAtC;AAEAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,sBADC;AAEP8B,MAAAA,OAAO,EAAErB;AAFF,KAAD,CAAR;AAID,GA1BD,CA0BE,OAAOsB,CAAP,EAAU;AACV1B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGD;AACF,CAhCM;AAkCP,OAAO,MAAM+B,sBAAsB,GAAIhB,QAAD,IAAc,MAAOX,QAAP,IAAoB;AACtEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEJ,0BADC;AAEP4B,IAAAA,OAAO,EAAEd;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMiB,sBAAsB,GAAIC,WAAD,IAAiB,MAAO7B,QAAP,IAAoB;AACzEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEH,0BADC;AAEP2B,IAAAA,OAAO,EAAEI;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import axios from 'axios';\n\nimport {\n  FETCH_MISSIONS_PENDING,\n  FETCH_MISSIONS_SUCCESS,\n  FETCH_MISSIONS_ERROR,\n  SET_MISSIONS_ROCKET_FILTER,\n  SET_MISSIONS_SEARCH_FILTER,\n} from '../types';\n\nexport const fetchAllMissions = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: FETCH_MISSIONS_PENDING,\n    });\n\n    const response = await axios.get('https://api.spacexdata.com/v3/launches');\n\n    const missions = [];\n    for (let i = 0; i < response.data.length; i++) {\n      missions.push({\n        rocket: response.data[i].rocket.rocket_name,\n        rocketId: response.data[i].rocket.rocket_id,\n        type: response.data[i].rocket.rocket_type,\n        location: response.data[i].launch_site.site_name,\n        details: response.data[i].details,\n        date: response.data[i].launch_date_utc,\n        link: response.data[i].links.article_link,\n      });\n    }\n\n    console.log('Formatted mission data', missions);\n\n    dispatch({\n      type: FETCH_MISSIONS_SUCCESS,\n      payload: missions,\n    });\n  } catch (e) {\n    dispatch({\n      type: FETCH_MISSIONS_ERROR,\n    });\n  }\n};\n\nexport const filterMissionsByRocket = (rocketId) => async (dispatch) => {\n  dispatch({\n    type: SET_MISSIONS_ROCKET_FILTER,\n    payload: rocketId,\n  });\n};\n\nexport const filterMissionsBySearch = (searchValue) => async (dispatch) => {\n  dispatch({\n    type: SET_MISSIONS_SEARCH_FILTER,\n    payload: searchValue,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}