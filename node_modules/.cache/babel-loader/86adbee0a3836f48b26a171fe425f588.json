{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_HISTORY_PENDING, FETCH_HISTORY_SUCCESS, FETCH_HISTORY_ERROR, SET_HISTORY_SEARCH_FILTER } from '../types';\nexport const fetchAllHistory = () => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_HISTORY_PENDING\n    });\n    const response = await axios.get('https://api.spacexdata.com/v3/history');\n    const history = [];\n\n    for (let i = 0; i < response.data.length; i++) {\n      history.push({\n        title: response.data[i].title,\n        link: response.data[i].links.wikipedia,\n        details: response.data[i].details,\n        date: response.data[i].event_date_utc,\n        id: response.data[i].id\n      });\n    }\n\n    console.log('Formatted history data', history);\n    dispatch({\n      type: FETCH_HISTORY_SUCCESS,\n      payload: history\n    });\n  } catch (e) {\n    dispatch({\n      type: FETCH_HISTORY_ERROR\n    });\n  }\n};\nexport const filterHistoryBySearch = searchValue => async dispatch => {\n  dispatch({\n    type: SET_HISTORY_SEARCH_FILTER,\n    payload: searchValue\n  });\n};","map":{"version":3,"sources":["/Users/windsorhuang/Desktop/soma-frontend-code-test-master/src/redux/actions/historyActions.js"],"names":["axios","FETCH_HISTORY_PENDING","FETCH_HISTORY_SUCCESS","FETCH_HISTORY_ERROR","SET_HISTORY_SEARCH_FILTER","fetchAllHistory","dispatch","type","response","get","history","i","data","length","push","title","link","links","wikipedia","details","date","event_date_utc","id","console","log","payload","e","filterHistoryBySearch","searchValue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,yBAJF,QAKO,UALP;AAOA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIA,UAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,uCAAV,CAAvB;AAEA,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,IAAT,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7CD,MAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,QAAAA,KAAK,EAAEP,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBI,KADb;AAEXC,QAAAA,IAAI,EAAER,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBM,KAAjB,CAAuBC,SAFlB;AAGXC,QAAAA,OAAO,EAAEX,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBQ,OAHf;AAIXC,QAAAA,IAAI,EAAEZ,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBU,cAJZ;AAKXC,QAAAA,EAAE,EAAEd,QAAQ,CAACI,IAAT,CAAcD,CAAd,EAAiBW;AALV,OAAb;AAOD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCd,OAAtC;AAEAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,qBADC;AAEPuB,MAAAA,OAAO,EAAEf;AAFF,KAAD,CAAR;AAID,GAxBD,CAwBE,OAAOgB,CAAP,EAAU;AACVpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGD;AACF,CA9BM;AAgCP,OAAO,MAAMwB,qBAAqB,GAAIC,WAAD,IAAiB,MAAOtB,QAAP,IAAoB;AACxEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEH,yBADC;AAEPqB,IAAAA,OAAO,EAAEG;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import axios from 'axios';\n\nimport {\n  FETCH_HISTORY_PENDING,\n  FETCH_HISTORY_SUCCESS,\n  FETCH_HISTORY_ERROR,\n  SET_HISTORY_SEARCH_FILTER,\n} from '../types';\n\nexport const fetchAllHistory = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: FETCH_HISTORY_PENDING,\n    });\n\n    const response = await axios.get('https://api.spacexdata.com/v3/history');\n\n    const history = [];\n    for (let i = 0; i < response.data.length; i++) {\n      history.push({\n        title: response.data[i].title,\n        link: response.data[i].links.wikipedia,\n        details: response.data[i].details,\n        date: response.data[i].event_date_utc,\n        id: response.data[i].id,\n      });\n    }\n\n    console.log('Formatted history data', history);\n\n    dispatch({\n      type: FETCH_HISTORY_SUCCESS,\n      payload: history,\n    });\n  } catch (e) {\n    dispatch({\n      type: FETCH_HISTORY_ERROR,\n    });\n  }\n};\n\nexport const filterHistoryBySearch = (searchValue) => async (dispatch) => {\n  dispatch({\n    type: SET_HISTORY_SEARCH_FILTER,\n    payload: searchValue,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}