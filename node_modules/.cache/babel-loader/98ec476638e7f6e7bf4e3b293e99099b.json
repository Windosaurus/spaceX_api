{"ast":null,"code":"import{createStore,applyMiddleware,compose}from'redux';import{routerMiddleware}from'connected-react-router';import thunk from'redux-thunk';import{createLogger}from'redux-logger';import rootReducer from'./redux/reducers';export default(function(initialState,history){// Installs hooks that always keep react-router and redux store in sync\nvar middleware=[thunk,routerMiddleware(history)];var store;middleware.push(createLogger());store=createStore(rootReducer(history),initialState,compose(applyMiddleware.apply(void 0,middleware),typeof window==='object'&&typeof window.__REDUX_DEVTOOLS_EXTENSION__!=='undefined'?window.__REDUX_DEVTOOLS_EXTENSION__():function(f){return f;}));if(module.hot){// Enable Webpack hot module replacement for reducers\nmodule.hot.accept('./redux/reducers',function(){var nextReducer=require('./redux/reducers');store.replaceReducer(nextReducer);});}return store;});","map":{"version":3,"sources":["/Users/windsorhuang/Desktop/soma-frontend-code-test-master/src/configureStore.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","thunk","createLogger","rootReducer","initialState","history","middleware","store","push","window","__REDUX_DEVTOOLS_EXTENSION__","f","module","hot","accept","nextReducer","require","replaceReducer"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CAEA,eAAe,SAACC,YAAD,CAAeC,OAAf,CAA2B,CACxC;AACA,GAAMC,CAAAA,UAAU,CAAG,CACjBL,KADiB,CAEjBD,gBAAgB,CAACK,OAAD,CAFC,CAAnB,CAIA,GAAIE,CAAAA,KAAJ,CACAD,UAAU,CAACE,IAAX,CAAgBN,YAAY,EAA5B,EACAK,KAAK,CAAGV,WAAW,CAACM,WAAW,CAACE,OAAD,CAAZ,CAAuBD,YAAvB,CAAqCL,OAAO,CAC7DD,eAAe,MAAf,QAAmBQ,UAAnB,CAD6D,CAE7D,MAAOG,CAAAA,MAAP,GAAkB,QAAlB,EAA8B,MAAOA,CAAAA,MAAM,CAACC,4BAAd,GAA+C,WAA7E,CAA2FD,MAAM,CAACC,4BAAP,EAA3F,CAAmI,SAACC,CAAD,QAAOA,CAAAA,CAAP,EAFtE,CAA5C,CAAnB,CAIA,GAAIC,MAAM,CAACC,GAAX,CAAgB,CACd;AACAD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,kBAAlB,CAAsC,UAAM,CAC1C,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAAC,kBAAD,CAA3B,CACAT,KAAK,CAACU,cAAN,CAAqBF,WAArB,EACD,CAHD,EAID,CACD,MAAOR,CAAAA,KAAP,CACD,CApBD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './redux/reducers';\n\nexport default (initialState, history) => {\n  // Installs hooks that always keep react-router and redux store in sync\n  const middleware = [\n    thunk,\n    routerMiddleware(history),\n  ];\n  let store;\n  middleware.push(createLogger());\n  store = createStore(rootReducer(history), initialState, compose(\n    applyMiddleware(...middleware),\n    typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n  ));\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./redux/reducers', () => {\n      const nextReducer = require('./redux/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}