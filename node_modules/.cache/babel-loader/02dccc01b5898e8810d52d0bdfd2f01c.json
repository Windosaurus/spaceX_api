{"ast":null,"code":"var _jsxFileName = \"/Users/windsorhuang/Desktop/soma-frontend-code-test-master/src/components/rocketComponents/RocketList.jsx\";\nimport React, { useEffect } from 'react';\nimport Card from 'react-bootstrap/Card'; // Redux Imports\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, CardDeck, Container } from 'react-bootstrap';\nimport { fetchAllRockets } from '../../redux/actions/rocketsActions';\nimport { filterMissionsByRocket } from '../../redux/actions/missionsActions'; // Bootstrap Components\n\nimport SearchBar from '../SearchBar';\nimport ErrorCard from '../ErrorCard'; // Displays rockets\n\nfunction RocketList() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.rockets);\n  useEffect(() => {\n    async function getRockets() {\n      dispatch(fetchAllRockets());\n    }\n\n    getRockets().then(r => console.log(r));\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    pageType: \"rockets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, state.loading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, state.rockets === [] || state.rockets === undefined ? /*#__PURE__*/React.createElement(ErrorCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 66\n    }\n  }) : /*#__PURE__*/React.createElement(CardDeck, {\n    className: \"card_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, state.rockets.map((rocket, index) => /*#__PURE__*/React.createElement(Card, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => dispatch(filterMissionsByRocket(rocket.name)),\n    bg: \"dark\",\n    text: \"white\",\n    className: \"card_item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: rocket.img,\n    id: \"card_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      paddingBottom: '0',\n      paddingTop: '0.25'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      textAlign: 'center',\n      fontSize: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, rocket.name)))))));\n}\n\nexport default RocketList;","map":{"version":3,"sources":["/Users/windsorhuang/Desktop/soma-frontend-code-test-master/src/components/rocketComponents/RocketList.jsx"],"names":["React","useEffect","Card","useSelector","useDispatch","Row","CardDeck","Container","fetchAllRockets","filterMissionsByRocket","SearchBar","ErrorCard","RocketList","dispatch","state","rockets","getRockets","then","r","console","log","loading","undefined","map","rocket","index","cursor","name","img","paddingBottom","paddingTop","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\n\n// Redux Imports\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, CardDeck, Container } from 'react-bootstrap';\nimport { fetchAllRockets } from '../../redux/actions/rocketsActions';\nimport { filterMissionsByRocket } from '../../redux/actions/missionsActions';\n\n\n// Bootstrap Components\nimport SearchBar from '../SearchBar';\nimport ErrorCard from '../ErrorCard';\n\n// Displays rockets\nfunction RocketList() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.rockets);\n\n  useEffect(() => {\n    async function getRockets() {\n      dispatch(fetchAllRockets());\n    }\n    getRockets().then((r) => console.log(r));\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        <SearchBar pageType=\"rockets\" />\n      </Row>\n      <Row>\n        {state.loading && <h1>Loading...</h1>}\n      </Row>\n      <Row>\n        {(state.rockets === [] || state.rockets === undefined) ? <ErrorCard />\n          : (\n            <CardDeck className=\"card_container\">\n              {state.rockets.map((rocket, index) => (\n                <Card\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => dispatch(filterMissionsByRocket(rocket.name))}\n                  bg=\"dark\"\n                  text=\"white\"\n                  className=\"card_item\"\n                  key={index}\n                >\n                  <Card.Img variant=\"top\" src={rocket.img} id=\"card_img\" />\n                  <Card.Body style={{ paddingBottom: '0', paddingTop: '0.25' }}>\n                    <Card.Title style={{ textAlign: 'center', fontSize: '1em' }}>{rocket.name}</Card.Title>\n                  </Card.Body>\n                </Card>\n              ))}\n            </CardDeck>\n          )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default RocketList;\n"]},"metadata":{},"sourceType":"module"}